name: build pycddlib wheels

on:
  workflow_dispatch:

jobs:
  build_wheel:
    strategy:
      fail-fast: false
      matrix:
        os: [
            "windows-latest",
            "ubuntu-latest",
            "macos-14", # macOS arm64
            "macos-13", # macOS x86_64
          ]

    runs-on: ${{ matrix.os }}

    needs: [update_vcpkg_cache]

    steps:
      - uses: actions/checkout@v4
        with:
          repository: mcmtroffaes/pycddlib
          ref: 3.0.2

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Set up Python
        run: uv python install 3.12

      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y libcdd-dev libgmp-dev

      - name: Build wheel (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: uv build --wheel

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install cddlib gmp

      - name: Build wheel (macOS)
        if: matrix.os == 'macos-latest'
        run: env "CFLAGS=-I$(brew --prefix)/include -L$(brew --prefix)/lib" uv build --wheel

      - name: Download pre-built wheel from PyPI (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          $url = "https://files.pythonhosted.org/packages/95/5f/2c75a27084adccb3312d9db9046daa2e82e6918e40835008122e6edead10/pycddlib-3.0.2-cp312-cp312-win_amd64.whl"
          $out = "dist/pycddlib-3.0.2-cp312-cp312-win_amd64.whl"
          iwr $url -OutFile $out
          Write-Host "Saved to $out"

      - name: Release current commit
        uses: ncipollo/release-action@v1.18.0
        with:
          artifacts: "dist/*.whl"
          tag: "pycddlib_wheels"
          name: "pycddlib_wheels"
          removeArtifacts: false
          allowUpdates: true
          replacesArtifacts: true
          makeLatest: false
