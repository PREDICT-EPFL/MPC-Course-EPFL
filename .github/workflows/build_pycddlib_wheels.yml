name: build pycddlib wheels

on:
  workflow_dispatch:

env:
  VCPKG_HASH: "dd3097e305afa53f7b4312371f62058d2e665320"

jobs:
  update_vcpkg_cache:
    runs-on: "windows-latest"
    steps:
      - name: Check for cache
        uses: actions/cache@v4
        id: vcpkg-installed-cache
        with:
          path: installed/
          key: vcpkg-${{ env.VCPKG_HASH }}-${{ runner.os }}

      - name: Clone vcpkg
        uses: actions/checkout@v4
        if: steps.vcpkg-installed-cache.outputs.cache-hit != 'true'
        with:
          repository: microsoft/vcpkg
          ref: ${{ env.VCPKG_HASH }}

      - name: Install cddlib
        if: steps.vcpkg-installed-cache.outputs.cache-hit != 'true'
        run: |
          ./bootstrap-vcpkg.bat -disableMetrics
          ./vcpkg.exe install cddlib:x64-windows-static-md-release
          ls -R installed/x64-windows-static-md-release/include/
          ls -R installed/x64-windows-static-md-release/lib/

      - name: Upload vcpkg cache
        uses: actions/upload-artifact@v4
        with:
          name: vcpkg-x64-${{ runner.os }}
          path: installed/
          if-no-files-found: error

  build_wheel:
    strategy:
      fail-fast: false
      matrix:
        os: [
            "windows-latest",
            "ubuntu-latest",
            "macos-latest", # macOS arm64
            "macos-latest-large", # macOS x86_64
          ]

    runs-on: ${{ matrix.os }}

    needs: [update_vcpkg_cache]

    steps:
      - uses: actions/checkout@v4
        with:
          repository: mcmtroffaes/pycddlib
          ref: 3.0.2

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Set up Python
        run: uv python install 3.12

      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y libcdd-dev libgmp-dev

      - name: Build wheel (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: uv build --wheel

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install cddlib gmp

      - name: Build wheel (macOS)
        if: matrix.os == 'macos-latest'
        run: env "CFLAGS=-I$(brew --prefix)/include -L$(brew --prefix)/lib" uv build --wheel

      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/download-artifact@v4
        with:
          name: vcpkg-x64-${{ runner.os }}

      - name: Build wheel (Windows)
        if: matrix.os == 'windows-latest'
        run: uv build --wheel -C="--global-option=build_ext" -C="--global-option=-Ix64-windows-static-md-release/include/" -C="--global-option=-Lx64-windows-static-md-release/lib/"

      - name: Release current commit
        uses: ncipollo/release-action@v1.18.0
        with:
          artifacts: "dist/*.whl"
          tag: "pycddlib_wheels"
          name: "pycddlib_wheels"
          removeArtifacts: false
          allowUpdates: true
          replacesArtifacts: true
          makeLatest: false
