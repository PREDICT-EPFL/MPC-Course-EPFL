name: build mpt4py wheels

on:
  workflow_dispatch:

env:
  UV_NO_SYNC: true

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build_wheel:
    runs-on: "ubuntu-latest"

    steps:
      - uses: actions/checkout@v4
        with:
          repository: PREDICT-EPFL/mpt4py
          ref: 0.1.3
          token: ${{ secrets.MPT4PY_TOKEN }}

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Set up Python
        run: uv python install 3.12

      - name: Build wheel
        run: uv build --wheel

      - name: Release current commit
        uses: ncipollo/release-action@v1.18.0
        with:
          artifacts: "dist/*.whl"
          tag: "mpt4py_wheels"
          name: "mpt4py_wheels"
          removeArtifacts: false
          allowUpdates: true
          replacesArtifacts: true
          makeLatest: false

  build_docs:
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4
        with:
          repository: PREDICT-EPFL/mpt4py
          ref: 0.1.3
          token: ${{ secrets.MPT4PY_TOKEN }}

      - name: setup GitHub Pages
        uses: actions/setup-pages@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Set up Python
        run: uv python install 3.12

      - name: install dependencies
        run: uv venv && uv pip install -e . --group docs

      - name: build docs
        run: uv run sphinx-apidoc -o docs/source . && uv run sphinx-build -b html docs/source docs/build

      - name: upload html
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/build/html

      - name: deploy to GitHub Pages
        uses: actions/deploy-pages@v4
